{
  "name": "codescene-vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/codescene-oss/codescene-vscode.git"
  },
  "icon": "assets/cs-logo.png",
  "displayName": "CodeScene",
  "author": "CodeScene AB",
  "publisher": "codescene",
  "description": "Integrates CodeScene analysis into VS Code. Keeps your code clean and maintainable.",
  "version": "0.7.5",
  "license": "MIT",
  "engines": {
    "vscode": "^1.75.1"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "code analysis",
    "code health",
    "code review",
    "code quality",
    "code metrics",
    "cyclomatic complexity",
    "refactoring",
    "technical debt"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "codescene.createRulesTemplate",
        "title": "CodeScene: Create Rules Template"
      },
      {
        "command": "codescene.checkRules",
        "title": "CodeScene: Check code health rule match for selected file"
      },
      {
        "command": "codescene.runDeltaAnalysis",
        "title": "CodeScene: Run delta analysis",
        "icon": "$(refresh)"
      },
      {
        "command": "codescene.openCodeHealthDocs",
        "title": "CodeScene: Open Code Health Documentation"
      },
      {
        "command": "codescene.gotoAndPresentRefactoring",
        "title": "View in ACE panel"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codescene-activity-bar",
          "title": "CodeScene",
          "icon": "assets/cs-logo.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "codescene.explorerCodeReviewView",
          "name": "Code health review",
          "when": "config.codescene.enableCodeHealthView"
        },
        {
          "id": "codescene.explorerAutoRefactorView",
          "name": "Auto-refactor"
        },
        {
          "id": "codescene.deltaTreeView",
          "name": "Quality Gate",
          "icon": "$(lock)"
        }
      ],
      "codescene-activity-bar": [
        {
          "id": "codescene.statusView",
          "name": "Status",
          "type": "webview",
          "icon": "assets/cs-logo.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codescene.explorerAutoRefactorView",
        "contents": "To see Auto-refactoring suggestions, you need to \n1. Participate in the [CodeScene ACE beta program](https://codescene.com/ai) \n2. Sign in to a CodeScene server\n3. Enable CodeScene ACE in settings",
        "when": "!codescene.isSignedIn || !config.codescene.enableAutoRefactor"
      },
      {
        "view": "codescene.explorerCodeReviewView",
        "contents": "When CodeScene code reviews are done, results will be collected here."
      },
      {
        "view": "codescene.deltaTreeView",
        "contents": "Click the refresh button to initiate a CodeScene delta analysis. This will compare the current state of your code with the latest (HEAD) commit and present any introduced code smells."
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "codescene.gotoAndPresentRefactoring",
          "when": "view == codescene.explorerAutoRefactorView"
        }
      ],
      "view/title": [
        {
          "command": "codescene.runDeltaAnalysis",
          "when": "view === codescene.deltaTreeView",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "codescene.gotoAndPresentRefactoring",
          "when": "false"
        }
      ]
    },
    "configuration": {
      "title": "CodeScene",
      "properties": {
        "codescene.enableCodeLenses": {
          "type": "boolean",
          "default": true,
          "description": "Enable CodeScene code lenses",
          "order": 1
        },
        "codescene.enableCodeHealthView": {
          "type": "boolean",
          "default": false,
          "description": "Enable code health view in the explorer panel",
          "order": 5
        },
        "codescene.gitignore": {
          "type": "boolean",
          "default": true,
          "description": "Exclude files in .gitignore from analysis",
          "order": 8
        },
        "codescene.enableAutoRefactor": {
          "type": "boolean",
          "default": false,
          "description": "Enable CodeScene ACE. This is currently only available for customers part of the ACE beta program.",
          "order": 15
        },
        "codescene.cloudUrl": {
          "type": "string",
          "default": "https://codescene.io",
          "order": 20
        },
        "codescene.cloudApiUrl": {
          "type": "string",
          "default": "https://api.codescene.io",
          "description": "The API URL of the CodeScene Cloud service",
          "order": 22
        }
      }
    },
    "icons": {
      "cs-logo": {
        "description": "CodeScene logo",
        "default": {
          "fontPath": "assets/cs.woff",
          "fontCharacter": "\\e900"
        }
      }
    },
    "colors": [
      {
        "id": "codescene.codeHealth.healthy",
        "description": "Color for indicating healthy code",
        "defaults": {
          "light": "#4f9f78",
          "dark": "#72b293"
        }
      },
      {
        "id": "codescene.codeHealth.problematic",
        "description": "Color for indicating problematic code that needs attention",
        "defaults": {
          "light": "#f19367",
          "dark": "#f4a985"
        }
      },
      {
        "id": "codescene.codeHealth.unhealthy",
        "description": "Color for indicating unhealthy code with high risk for defects",
        "defaults": {
          "light": "#e0525c",
          "dark": "#e6757d"
        }
      },
      {
        "id": "codescene.codeHealth.undefined",
        "description": "Color for indicating unknown code health",
        "defaults": {
          "light": "#b3bccd",
          "dark": "#cfd7e7"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "prepackage": "npm run tsc && npm run lint && npm run clean",
    "package": "NODE_ENV=production node ./esbuild.js",
    "clean": "rm -rf ./out",
    "build": "node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "tsc": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "npm run tsc && npm run lint && npm run build",
    "test": "node ./out/test/runTest.js",
    "release:minor": "standard-version --release-as minor",
    "release:patch": "standard-version --release-as patch",
    "release:major": "standard-version --release-as major"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.75.1",
    "@typescript-eslint/eslint-plugin": "^5.51.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.19.5",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^8.33.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "standard-version": "^9.5.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@types/follow-redirects": "^1.14.1",
    "@types/lodash.debounce": "^4.0.7",
    "@types/vscode-webview": "^1.57.4",
    "@vscode/codicons": "^0.0.35",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "axios": "^1.3.4",
    "extract-zip": "^2.0.1",
    "follow-redirects": "^1.15.6",
    "lodash.debounce": "^4.0.8",
    "uuid": "^9.0.0"
  }
}
