{
  "name": "codescene-vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/codescene-oss/codescene-vscode.git"
  },
  "icon": "assets/cs-logo.png",
  "displayName": "CodeScene",
  "author": "CodeScene AB",
  "publisher": "codescene",
  "description": "Integrates CodeScene analysis into VS Code. Keeps your code clean and maintainable.",
  "version": "0.7.0-beta-1",
  "license": "MIT",
  "engines": {
    "vscode": "^1.75.1"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "code analysis",
    "code health",
    "code review",
    "code quality",
    "code metrics",
    "complexity",
    "refactoring",
    "technical debt"
  ],
  "activationEvents": [
    "onLanguage:apex",
    "onLanguage:c",
    "onLanguage:clojure",
    "onLanguage:cpp",
    "onLanguage:csharp",
    "onLanguage:dart",
    "onLanguage:erlang",
    "onLanguage:elixir",
    "onLanguage:go",
    "onLanguage:groovy",
    "onLanguage:java",
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:kotlin",
    "onLanguage:objectivec",
    "onLanguage:perl",
    "onLanguage:php",
    "onLanguage:powershell",
    "onLanguage:python",
    "onLanguage:ruby",
    "onLanguage:rust",
    "onLanguage:scala",
    "onLanguage:swift",
    "onLanguage:tcl",
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onLanguage:vb",
    "onLanguage:vue"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "codescene.loginToCodeScene",
        "title": "CodeScene: Login to CodeScene"
      },
      {
        "command": "codescene.createRulesTemplate",
        "title": "CodeScene: Create Rules Template"
      },
      {
        "command": "codescene.openCodeHealthDocs",
        "title": "CodeScene: Open Code Health Documentation"
      },
      {
        "command": "codescene.associateWithProject",
        "title": "CodeScene: Associate Workspace with CodeScene Project"
      },
      {
        "command": "codescene.scmCouplingsView.open",
        "title": "Open File",
        "icon": "$(preferences-open-settings)"
      },
      {
        "command": "codescene.scmCouplingsView.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "codescene.openDashboard",
        "title": "CodeScene: Open Project Dashboard"
      },
      {
        "command": "codescene.openHotspots",
        "title": "CodeScene: Open Hotspots Map"
      },
      {
        "command": "codescene.openChangeCoupling",
        "title": "CodeScene: Open Change Coupling"
      },
      {
        "command": "codescene.openCodeReview",
        "title": "CodeScene: Open Code Review"
      },
      {
        "command": "codescene.openXRay",
        "title": "CodeScene: Open X-Ray"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codescene-activity-bar",
          "title": "CodeScene",
          "icon": "assets/cs-logo.svg"
        }
      ]
    },
    "views": {
      "scm": [
        {
          "id": "codescene.scmCouplingsView",
          "name": "Change coupling"
        }
      ],
      "explorer": [
        {
          "id": "codescene.explorerCouplingsView",
          "name": "Change coupling"
        }
      ],
      "codescene-activity-bar": [
        {
          "id": "codescene.remoteFeaturesView",
          "name": "Remote Features"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codescene.remoteFeaturesView",
        "contents": "In order to fully utilize the CodeScene extension, you need to be logged in to a CodeScene server ☁️\nCheck the extension settings for URL configuration.\n\n[Login to CodeScene](command:codescene.loginToCodeScene?[true])",
        "when": "!codescene.isLoggedIn"
      },
      {
        "view": "codescene.remoteFeaturesView",
        "contents": "Congratulations, you're logged in. You can now use the CodeScene extension to its full potential.",
        "when": "codescene.isLoggedIn"
      },
      {
        "view": "codescene.scmCouplingsView",
        "contents": "In order to see coupling data, you need to be logged in to the CodeScene server",
        "when": "!codescene.isLoggedIn"
      },
      {
        "view": "codescene.scmCouplingsView",
        "contents": "In order to see coupling data, you need to have associated your workspace with a CodeScene project.\n[Associate workspace](command:codescene.associateWithProject)",
        "when": "!codescene.isWorkspaceAssociated && codescene.isLoggedIn"
      },
      {
        "view": "codescene.explorerCouplingsView",
        "contents": "In order to see coupling data, you need to be logged in to the CodeScene server",
        "when": "!codescene.isLoggedIn"
      },
      {
        "view": "codescene.explorerCouplingsView",
        "contents": "In order to see coupling data, you need to have associated your workspace with a CodeScene project.\n[Associate workspace](command:codescene.associateWithProject)",
        "when": "!codescene.isWorkspaceAssociated && codescene.isLoggedIn"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codescene.scmCouplingsView.refresh",
          "when": "view == codescene.scmCouplingsView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codescene.scmCouplingsView.open",
          "when": "view == codescene.scmCouplingsView && viewItem == rootItem",
          "group": "inline"
        },
        {
          "command": "codescene.openXRay",
          "when": "view == codescene.scmCouplingsView || view == codescene.explorerCouplingsView"
        },
        {
          "command": "codescene.openCodeReview",
          "when": "view == codescene.scmCouplingsView || view == codescene.explorerCouplingsView"
        }
      ],
      "commandPalette": [
        {
          "command": "codescene.openDashboard",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        },
        {
          "command": "codescene.openHotspots",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        },
        {
          "command": "codescene.openChangeCoupling",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        },
        {
          "command": "codescene.associateWithProject",
          "when": "codescene.isLoggedIn"
        },
        {
          "command": "codescene.openXRay",
          "when": "false"
        },
        {
          "command": "codescene.openCodeReview",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "codescene.openCodeReview",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        },
        {
          "command": "codescene.openXRay",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        }
      ],
      "editor/title/context": [
        {
          "command": "codescene.openCodeReview",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        },
        {
          "command": "codescene.openXRay",
          "when": "codescene.isWorkspaceAssociated && codescene.isLoggedIn"
        }
      ]
    },
    "configuration": {
      "title": "CodeScene",
      "properties": {
        "codescene.enableCodeLenses": {
          "type": "boolean",
          "default": true,
          "description": "Enable CodeScene code lenses",
          "order": 1
        },
        "codescene.gitignore": {
          "type": "boolean",
          "default": true,
          "description": "Exclude files in .gitignore from analysis",
          "order": 2
        },
        "codescene.excludeExternal": {
          "type": "boolean",
          "default": true,
          "description": "Exclude files outside of the workspace from analysis",
          "order": 3
        },
        "codescene.cloudUrl": {
          "type": "string",
          "default": "https://codescene.io",
          "description": "CodeScene Cloud URL",
          "order": 4
        },
        "codescene.cloudApiUrl": {
          "type": "string",
          "default": "https://api.codescene.io",
          "description": "The API URL of the CodeScene Cloud service",
          "order": 5
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "package": "NODE_ENV=production node ./esbuild.js",
    "compile": "node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "tsc": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "npm run tsc && npm run lint",
    "test": "node ./out/test/runTest.js",
    "release:minor": "standard-version --release-as minor",
    "release:patch": "standard-version --release-as patch",
    "release:major": "standard-version --release-as major"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.75.1",
    "@typescript-eslint/eslint-plugin": "^5.51.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.19.5",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^8.33.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "standard-version": "^9.5.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@types/follow-redirects": "^1.14.1",
    "@types/lodash.debounce": "^4.0.7",
    "@types/vscode-webview": "^1.57.4",
    "@vscode/codicons": "^0.0.35",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "axios": "^1.3.4",
    "extract-zip": "^2.0.1",
    "follow-redirects": "^1.15.2",
    "lodash.debounce": "^4.0.8",
    "uuid": "^9.0.0"
  }
}
