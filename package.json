{
  "name": "codescene-vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/codescene-oss/codescene-vscode.git"
  },
  "icon": "assets/cs-logo.png",
  "displayName": "CodeScene",
  "author": "CodeScene AB",
  "publisher": "codescene",
  "description": "Integrates CodeScene analysis into VS Code. Keeps your code clean and maintainable.",
  "version": "0.15.0",
  "license": "MIT",
  "engines": {
    "vscode": "^1.75.1"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "code analysis",
    "code health",
    "code review",
    "code quality",
    "code metrics",
    "cyclomatic complexity",
    "refactoring",
    "technical debt",
    "ai",
    "anthropic",
    "openai",
    "gemini",
    "gpt",
    "ai code review"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "codescene.createRulesTemplate",
        "title": "CodeScene: Create Rules Template"
      },
      {
        "command": "codescene.checkRules",
        "title": "CodeScene: Check code health rule match for selected file",
        "when": "codescene.asyncActivationFinished"
      },
      {
        "command": "codescene.codeHealthMonitorHelp",
        "title": "CodeScene: Code Health Monitoring help",
        "icon": "$(question)"
      },
      {
        "command": "codescene.codeHealthMonitorSort",
        "title": "Sort files by...",
        "icon": "$(sort-precedence)"
      },
      {
        "command": "codescene.openCodeHealthDocs",
        "title": "CodeScene: Open Code Health Documentation"
      },
      {
        "command": "codescene.toggleReviewCodeLenses",
        "title": "CodeScene: Toggle Review CodeLenses"
      },
      {
        "command": "codescene.showLogOutput",
        "title": "CodeScene: Show output log"
      },
      {
        "command": "codescene.signIn",
        "title": "CodeScene: Sign in to CodeScene (see Server Url setting)"
      },
      {
        "command": "codescene.signOut",
        "title": "CodeScene: Sign out from CodeScene"
      },
      {
        "command": "codescene.revokeAceAcknowledgement",
        "title": "CodeScene: Revoke acknowledging ACE usage"
      },
      {
        "command": "codescene.printDevtoolsApiStats",
        "title": "CodeScene: Print Devtools API stats"
      },
      {
        "command": "codescene.codeHealthMonitorSelectBaseline",
        "title": "Select monitor baseline...",
        "icon": "$(list-tree)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codescene-activity-bar",
          "title": "CodeScene",
          "icon": "$(cs-logo)"
        }
      ]
    },
    "views": {
      "codescene-activity-bar": [
        {
          "id": "codescene.statusView",
          "name": "Status",
          "type": "webview",
          "icon": "$(cs-logo)",
          "when": "false"
        },
        {
          "id": "codescene.codeHealthMonitorView",
          "name": "Code Health Monitoring",
          "icon": "$(cs-logo)",
          "when": "codescene.asyncActivationFinished"
        },
        {
          "id": "codescene.codeHealthDetailsView",
          "name": "Code Health Details",
          "icon": "$(cs-logo)",
          "type": "webview",
          "when": "codescene.asyncActivationFinished"
        },
        {
          "id": "codescene.controlCenterView",
          "name": "Control Center",
          "icon": "$(cs-logo)",
          "type": "webview"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "codescene.codeHealthMonitorView",
        "contents": "The Code Health Monitor view compares the current state of your code against the selected baseline and presents any introduced code smells."
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codescene.codeHealthMonitorHelp",
          "when": "view === codescene.codeHealthMonitorView",
          "group": "navigation@2"
        },
        {
          "command": "codescene.codeHealthMonitorSort",
          "when": "view === codescene.codeHealthMonitorView",
          "group": "navigation@ยง"
        },
        {
          "command": "codescene.codeHealthMonitorSelectBaseline",
          "when": "view === codescene.codeHealthMonitorView",
          "group": "navigation@ยง"
        }
      ],
      "commandPalette": []
    },
    "configuration": {
      "title": "CodeScene",
      "properties": {
        "codescene.enableReviewCodeLenses": {
          "type": "boolean",
          "default": true,
          "description": "Show CodeLenses for review diagnostics",
          "order": 1
        },
        "codescene.gitignore": {
          "type": "boolean",
          "default": true,
          "description": "Exclude files in .gitignore from analysis",
          "order": 8
        },
        "codescene.enableAutoRefactor": {
          "type": "boolean",
          "default": true,
          "description": "Enable CodeScene ACE",
          "order": 15
        },
        "codescene.serverUrl": {
          "type": "string",
          "default": "https://codescene.io",
          "order": 19
        },
        "codescene.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "description": "Enable sending usage telemetry to CodeScene",
          "order": 20
        }
      }
    },
    "icons": {
      "cs-logo": {
        "description": "CodeScene logo",
        "default": {
          "fontPath": "assets/cs.woff",
          "fontCharacter": "\\e900"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "prepackage": "npm run updatedocs && npm run tsc && npm run lint && npm run clean",
    "package": "NODE_ENV=production node ./esbuild.js",
    "clean": "rm -rf ./out",
    "build": "node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "tsc": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "npm run tsc && npm run lint && npm run build",
    "test": "node ./out/test/runTest.js",
    "updatedocs": "fetch-github-release empear-analytics codescene-ide-protocol",
    "release:minor": "standard-version --release-as minor",
    "release:patch": "standard-version --release-as patch",
    "release:major": "standard-version --release-as major"
  },
  "extensionDependencies": [
    "vscode.git"
  ],
  "devDependencies": {
    "@commitlint/cli": "^19.0.0",
    "@commitlint/config-conventional": "^19.0.0",
    "@terascope/fetch-github-release": "^1.0.0",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "1.75.1",
    "@typescript-eslint/eslint-plugin": "^5.51.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "2.3.9",
    "esbuild": "^0.25.1",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^8.33.0",
    "glob": "^8.0.3",
    "mocha": "^10.8.2",
    "standard-version": "^9.5.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@types/follow-redirects": "^1.14.1",
    "@types/lodash.debounce": "^4.0.7",
    "@types/vscode-webview": "^1.57.4",
    "@vscode-elements/elements": "^1.8.0",
    "@vscode/codicons": "^0.0.35",
    "axios": "^1.12.0",
    "extract-zip": "^2.0.1",
    "follow-redirects": "^1.15.6",
    "lodash.debounce": "^4.0.8",
    "uuid": "^9.0.0"
  }
}
